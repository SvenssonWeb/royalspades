<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
   
   <global-method-security secured-annotations="enabled" />

    <!-- the security namespace configuration -->
    <!-- url security is done here -->
    <!-- api security is done in controllers with annotations -->
      
    <http auto-config="true" use-expressions="true" disable-url-rewriting="true" create-session="never">
    	<intercept-url pattern="/resources/theme/siteAdmin.js" access="hasRole('ROLE_ADMIN')" />
    	<intercept-url pattern="/resources/**" access="permitAll"/>
    	        
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/producer/**" access="hasRole('ROLE_SUPERVISOR')" />
        <intercept-url pattern="/shopowner/**" access="hasRole('ROLE_MODERATOR')" />
        <intercept-url pattern="/home/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/**" access="permitAll" />

    	<form-login login-page="/" default-target-url="/"
        	authentication-failure-url="/?login_error=1"    		
        	authentication-success-handler-ref="myAuthenticationSuccessHandler" />
    	<logout logout-success-url="/" />
    	
    	<remember-me services-ref="rememberMeServices"/>
    </http>
 
 	 <beans:bean id="myAuthenticationSuccessHandler"
        class="se.royalspades.security.MySimpleUrlAuthenticationSuccessHandler" />
        
	<beans:bean name="userDetailsService" class="se.royalspades.service.impl.CustomUserDetailsService" />
	
	<beans:bean name="customTokenRepository" class="se.royalspades.service.impl.CustomTokenRepository" />
	
	<beans:bean id='bCryptPasswordEncoder' class='org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder'/>

	<authentication-manager>
	  <authentication-provider user-service-ref="userDetailsService">
	          <password-encoder ref="bCryptPasswordEncoder"/>
	  </authentication-provider>
	</authentication-manager>
	

    <beans:bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:property name="tokenRepository" ref="customTokenRepository" />
        <beans:property name="userDetailsService" ref="userDetailsService" />
        <beans:property name="key" value="testKeyForBlog" />
    </beans:bean>
	  
</beans:beans>

 
